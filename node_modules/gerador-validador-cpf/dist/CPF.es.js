/**
 * @preserve
 * Gerador e Validador de CPF v5.0.2
 * http://tiagoporto.github.io/gerador-validador-cpf
 * Copyright (c) 2014-present Tiago Porto (http://tiagoporto.com)
 * Released under the MIT license
 */

const r=r=>{let t=0;for(let e=0;e<9;++e)t+=Number(r.charAt(e))*(10-e);const e=t%11;return e<2?0:11-e},t=r=>{let t=0;for(let e=0;e<10;++e)t+=Number(r.charAt(e))*(11-e);const e=t%11;return e<2?0:11-e},e=()=>{let r="";for(let t=0;t<9;++t)r+=String(Math.floor(10*Math.random()));return r},n=r=>{for(let t=0;t<10;t++)if(r===new Array(r.length+1).join(String(t)))return!0;return!1},l=({format:l}={})=>{let o="";do{o=e()}while(n(o));const c=r(o);return((r,t)=>{let e="",n="";return t&&(e=".",n="-"),r.slice(0,3)+e+r.slice(3,6)+e+r.slice(6,9)+n+r.slice(9,11)})(`${o}${c}${t(o+c)}`,l)},o=e=>{if("string"!=typeof e)return!1;const l=String(e).replace(/[\s.-]/g,""),o=l.slice(0,9),c=l.slice(9,11);if((i=l).length>11||i.length<11||n(l))return!1;var i;const s=r(o);return c===`${s}${t(`${o}${s}`)}`};export{l as generate,o as validate};
